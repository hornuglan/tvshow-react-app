{"version":3,"sources":["assets/img/pageNotFound.jpg","store/actions/allActions/contentAction.js","store/reducers/allReducers/content.js","store/reducers/allReducers/sort.js","store/reducers/rootReducer.js","store/actions/allActions/sortActions.js","store/configureStore.js","components/Search.js","components/Pagination.js","components/Header.js","components/Table.js","components/App.js","index.js"],"names":["module","exports","__webpack_require__","p","createUrl","pageNumber","query","concat","headers","method","Content-Type","trakt-api-key","trakt-api-version","createPosterUrl","id","initialState","data","leftBorder","rightBorder","pageCount","isLoading","fieldName","type","rootReducer","combineReducers","content","state","arguments","length","undefined","action","Object","objectSpread","payload","console","error","sort","store","createStore","applyMiddleware","thunk","logger","Search","queryRef","React","createRef","handleKeyPress","event","charCode","_this","props","setPage","current","value","log","_this2","this","react_default","a","createElement","className","defaultValue","ref","placeholder","onKeyPress","onClick","Component","Pagination","_pageRange","targetPage","range","threshold","Math","min","push","pageRange","href","decrement","map","key","toString","style","backgroundColor","color","increment","Header","components_Search","Pagination_Pagination","Table","components_Header","searchShow","title","sortByTitle","sortByYear","applySortRules","item","index","alt","src","poster","pageNotFound","show","genres","join","year","country","toUpperCase","b","App","components_Table","connect","dispatch","fetch","then","response","get","pageCountPromise","Promise","resolve","all","json","_ref","_ref2","slicedToArray","urls","ids","tvdb","promises","url","resp","_ref3","_ref4","toArray","slice","forEach","posterData","tvposter","find","element","thetvdb_id","ReactDOM","render","es","components_App","document","getElementById"],"mappings":"iGAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,gMCwD3BC,EAAY,SAACC,EAAYC,GAGlC,OAAID,GAAyB,KAAVC,EACf,uDAAAC,OAA8DF,EAA9D,oBAAAE,OAA2FD,GACpFA,EACP,wDAAAC,OAA+DD,GACxDD,EACP,yDAAAE,OAAgEF,EAAhE,aAEA,oEAIFG,EAAU,WACZ,MAAO,CACHC,OAAQ,MACRD,QAAS,CACLE,eAAgB,mBAChBC,gBAAiB,mEACjBC,oBAAqB,OAM3BC,EAAkB,SAACC,GAGrB,MADS,sCAAAP,OAAyCO,EAAzC,aAAAP,OADY,qCCjFZQ,EAAe,CACxBT,MAAO,GACPU,KAAM,GACNX,WAAY,EACZY,WAAY,EACZC,YAAa,GACbC,UAAW,KACXC,WAAW,GCPTL,EAAe,CACjBM,UAAW,KACXC,KAAM,MCCGC,EAAcC,YAAgB,CACvCC,QFMmB,WAAkC,IAAjCC,EAAiCC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAzBZ,EAAce,EAAWH,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EACrD,OAAOC,EAAOR,MACV,IDdoB,eCehB,OAAOS,OAAAC,EAAA,EAAAD,CAAA,GACAL,EADP,CAEIN,WAAW,IAGnB,IDnBmB,cCoBf,OAAOW,OAAAC,EAAA,EAAAD,CAAA,GACAL,EADP,CAEIV,KAAMc,EAAOG,QAAQjB,KACrBX,WAAYyB,EAAOG,QAAQ5B,WAC3BY,WAAYa,EAAOG,QAAQhB,WAC3BC,YAAaY,EAAOG,QAAQf,YAC5BZ,MAAOwB,EAAOG,QAAQ3B,MACtBa,UAAWW,EAAOG,QAAQd,UAC1BC,WAAW,IAGnB,ID9BmB,cCgCf,OAAOc,QAAQC,MAAM,sCAGzB,QACI,OAAOT,IE/BfU,KDAgB,WAAkC,IAAjCV,EAAiCC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAzBZ,EAAce,EAAWH,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAClD,OAAOC,EAAOR,MACV,IENyB,oBFOrB,OAAOS,OAAAC,EAAA,EAAAD,CAAA,GACAL,EACAI,EAAOG,SAGlB,QACI,OAAOP,+BGXNW,EAAQC,YAAYf,EAAagB,YAAgBC,IAAOC,yCCgCtDC,6MAlCXC,SAAWC,IAAMC,cAGjBC,eAAiB,SAACC,GACQ,KAAnBA,EAAMC,SACLC,EAAKC,MAAMC,QAAQ,EAAG,EAAG,GAAIF,EAAKN,SAASS,QAAQC,OAEnDnB,QAAQoB,IAAI,0GAIX,IAAAC,EAAAC,KACL,OACIC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACnBH,EAAAC,EAAAC,cAAA,SACIC,UAAU,eACVtC,KAAK,OACLuC,aAAcL,KAAKN,MAAMzB,QAAQnB,MACjCwD,IAAKN,KAAKb,SACVoB,YAAY,mBACZC,WAAYR,KAAKV,iBAErBW,EAAAC,EAAAC,cAAA,UACIrC,KAAK,SACLsC,UAAU,gBACVK,QAAS,kBAAMV,EAAKL,MAAMC,QAAQ,EAAG,EAAG,GAAII,EAAKZ,SAASS,QAAQC,SAHtE,eAvBaT,IAAMsB,WCkCrBC,EAAa,SAACjB,GAAU,IAAAkB,EAhCZ,SAACC,EAAYpD,EAAYC,EAAaC,GACpD,IAAImD,EAAQ,GACRC,EAAYC,KAAKC,IAAItD,EAAWF,EAAa,GAC9CoD,IAAepD,GAA6B,IAAfoD,GAC5BpD,IACAC,IACAqD,KACMF,IAAenD,GAAemD,IAAelD,IACnDF,IACAC,IACAqD,KAEJ,IAAK,IAAIlE,EAAaY,EAAYZ,GAAckE,EAAWlE,IACvDiE,EAAMI,KAAKrE,GAGf,OAFE6B,QAAQoB,IAAIe,EAAYpD,EAAYC,EAAaoD,GAE5C,CAAErD,aAAYC,cAAaoD,SAiBSK,CAAUzB,EAAMzB,QAAQpB,WAAY6C,EAAMzB,QAAQR,WAAYiC,EAAMzB,QAAQP,YAAagC,EAAMzB,QAAQN,WAA1IF,EADkBmD,EAClBnD,WAAYC,EADMkD,EACNlD,YAAaoD,EADPF,EACOE,MACjC,OAAQb,EAAAC,EAAAC,cAAA,MAAIC,UAAU,cAClBH,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,KAAGiB,KAAK,IAAIhB,UAAU,aAAaK,QAAS,kBAAMf,EAAMC,QAAQ,EAAG,EAAG,GAAID,EAAMzB,QAAQnB,SAAxF,WAEJmD,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,KAAGiB,KAAK,IAAIhB,UAAU,OAAOK,QAAS,kBAb9B,SAACI,EAAYlD,EAAWgC,EAASlC,EAAYC,EAAaZ,GACvE+D,EAAalD,GAChBgC,EAAQkB,EAAa,EAAGpD,EAAYC,EAAaZ,GAWGuE,CAAU3B,EAAMzB,QAAQpB,WAAY6C,EAAMzB,QAAQN,UAAW+B,EAAMC,QAASlC,EAAYC,EAAagC,EAAMzB,QAAQnB,SAA/J,MAEHgE,EAAMQ,IAAI,SAACzE,GAAD,OACPoD,EAAAC,EAAAC,cAAA,MAAIoB,IAAK1E,EAAW2E,YAChBvB,EAAAC,EAAAC,cAAA,KAAGiB,KAAK,IACRK,MAAO5E,IAAe6C,EAAMzB,QAAQpB,WAAa,CAAC6E,gBAAiB,wBAAyBC,MAAO,yBAA2B,GAC9HlB,QAAS,kBAAMf,EAAMC,QAAQ9C,EAAYY,EAAYC,EAAagC,EAAMzB,QAAQnB,SAASD,MAGjGoD,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,KAAGiB,KAAK,IAAIhB,UAAU,OAAOK,QAAS,kBA7BhC,SAACI,EAAYlD,EAAWgC,EAASlC,EAAYC,EAAaZ,GACrE+D,EAAalD,GAChBgC,EAAQkB,EAAa,EAAGpD,EAAYC,EAAaZ,GA2BG8E,CAAUlC,EAAMzB,QAAQpB,WAAY6C,EAAMzB,QAAQN,UAAW+B,EAAMC,QAASlC,EAAYC,EAAagC,EAAMzB,QAAQnB,SAA/J,MAEJmD,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,KAAGiB,KAAK,IAAIhB,UAAU,YAAYK,QAAS,kBAAMf,EAAMC,QAAQD,EAAMzB,QAAQN,UAAY+B,EAAMzB,QAAQN,UAAY,GAAK,EAAI+B,EAAMzB,QAAQN,UAAY,GAAK,EAAI+B,EAAMzB,QAAQN,UAAW+B,EAAMzB,QAAQnB,SAAtM,aCtCG+E,EAbA,SAACnC,GAAD,OACXO,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACXH,EAAAC,EAAAC,cAAC2B,EAAD,CACI7D,QAASyB,EAAMzB,QACf0B,QAASD,EAAMC,UAEnBM,EAAAC,EAAAC,cAAC4B,EAAD,CACIpC,QAASD,EAAMC,QACf1B,QAASyB,EAAMzB,6BC+CZ+D,0LA/CF,IAAAvC,EAAAO,KACL,OACIC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAAC8B,EAAD,CACItC,QAASK,KAAKN,MAAMC,QACpBuC,WAAYlC,KAAKN,MAAMwC,WACvBjE,QAAS+B,KAAKN,MAAMzB,UAExBgC,EAAAC,EAAAC,cAAA,aACIF,EAAAC,EAAAC,cAAA,SAAOC,UAAU,gBACbH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,aACVH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,cAAd,UACAH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,cAAd,UACAH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,aACd+B,MAAM,kDACN1B,QAAS,kBAAMhB,EAAKC,MAAM0C,YAAY3C,EAAKC,MAAMd,KAAKf,UAAW4B,EAAKC,MAAMd,KAAKd,QAFjF,SAKAmC,EAAAC,EAAAC,cAAA,MAAIC,UAAU,cAAd,UACAH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,aACd+B,MAAM,iFACN1B,QAAS,kBAAMhB,EAAKC,MAAM2C,WAAW5C,EAAKC,MAAMd,KAAKf,UAAW4B,EAAKC,MAAMd,KAAKd,QAFhF,QAKAmC,EAAAC,EAAAC,cAAA,MAAIC,UAAU,cAAd,aAGRH,EAAAC,EAAAC,cAAA,SAAOC,UAAU,cACZkC,EAAetC,KAAKN,MAAMzB,QAAQT,KAAMwC,KAAKN,MAAMd,KAAKf,UAAWmC,KAAKN,MAAMd,KAAKd,MAAMwD,IAAI,SAACiB,EAAMC,GAAP,OAC1FvC,EAAAC,EAAAC,cAAA,MAAIC,UAAU,YAAYmB,IAAKiB,EAAMhB,YACjCvB,EAAAC,EAAAC,cAAA,MAAIC,UAAU,cAAcoC,EAAQ,GACpCvC,EAAAC,EAAAC,cAAA,MAAIC,UAAU,cACVH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SAASqC,IAAI,GAAGC,IAAKH,EAAKI,OAASJ,EAAKI,OAASC,OAEpE3C,EAAAC,EAAAC,cAAA,MAAIC,UAAU,cAAcmC,EAAKM,KAAKV,MAAQI,EAAKM,KAAKV,MAAQ,IAChElC,EAAAC,EAAAC,cAAA,MAAIC,UAAU,cAAcmC,EAAKM,KAAKC,OAAUP,EAAKM,KAAKC,OAAQC,KAAK,MAAQ,IAC/E9C,EAAAC,EAAAC,cAAA,MAAIC,UAAU,cAAcmC,EAAKM,KAAKG,KAAOT,EAAKM,KAAKG,KAAO,IAC9D/C,EAAAC,EAAAC,cAAA,MAAIC,UAAU,cAAcmC,EAAKM,KAAKI,QAAUV,EAAKM,KAAKI,QAAQC,cAAgB,iBAtC9F9D,IAAMsB,YAmDb4B,EAAiB,SAAC9E,EAAMK,EAAWC,GAC5C,IAAID,IAAcC,EACd,OAAON,EAEX,GAAkB,SAAdK,EAAsB,CACtB,GA3DiB,QA2DbC,EACD,OAAON,EAAKoB,KAAM,SAACsB,EAAGiD,GAAJ,OAAUjD,EAAE2C,KAAKG,KAAOG,EAAEN,KAAKG,OAC7C,GA5DW,SA4DPlF,EACP,OAAON,EAAKoB,KAAM,SAACsB,EAAGiD,GAAJ,OAAUA,EAAEN,KAAKG,KAAO9C,EAAE2C,KAAKG,OAEjDtE,QAAQoB,IAAI,qDAIpB,GAAkB,UAAdjC,EAAuB,CACvB,GArEiB,QAqEbC,EAAoB,CAUpB,OAAON,EAAKoB,KATI,SAACsB,EAAGiD,GAChB,OAAIjD,EAAE2C,KAAKV,MAAQgB,EAAEN,KAAKV,MACf,EAEPjC,EAAE2C,KAAKV,MAAQgB,EAAEN,KAAKV,OACd,EAEL,IAGR,GA/EW,SA+EPrE,EAAqB,CAU5B,OAAON,EAAKoB,KATW,SAACsB,EAAGiD,GACvB,OAAIjD,EAAE2C,KAAKV,MAAQgB,EAAEN,KAAKV,OACd,EAERjC,EAAE2C,KAAKV,MAAQgB,EAAEN,KAAKV,MACf,EAEJ,IAIXzD,QAAQoB,IAAI,wDC1FlBsD,8LAGEpD,KAAKN,MAAMC,QAAQ,EAAG,EAAG,GAAI,qCAQ7B,OAHsBK,KAAKN,MAAMzB,QAAzBL,UAGcqC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cAAaH,EAAAC,EAAAC,cAAA,YAAWF,EAAAC,EAAAC,cAAA,aAGzDF,EAAAC,EAAAC,cAACkD,EAAD,CACI1D,QAASK,KAAKN,MAAMC,QACpB0C,WAAYrC,KAAKN,MAAM2C,WACvBD,YAAapC,KAAKN,MAAM0C,YACxBxD,KAAMoB,KAAKN,MAAMd,KACjBX,QAAS+B,KAAKN,MAAMzB,iBAnBlBmB,IAAMsB,WAyCT4C,cAfS,SAACzE,GACrB,MAAO,CACHZ,QAASY,EAAMZ,QACfW,KAAMC,EAAMD,OAIO,SAAC2E,GACxB,MAAO,CACH5D,QAAS,SAAC9C,EAAYY,EAAYC,EAAaZ,GAAtC,OAAgDyG,EVzC1C,SAAC1G,EAAYY,EAAYC,EAAaZ,GACzD,OAAO,SAAUyG,GAOb,OANAA,EAAS,CACLzF,KARgB,eAShBW,QAAS,OAIN+E,MAAM5G,EAAUC,EAAYC,GAAQE,KACtCyG,KACG,SAACC,GACG,IAAM/F,EAAY+F,EAAS1G,QAAQ2G,IAAI,2BACjCC,EAAmB,IAAIC,QAAQ,SAACC,GAAD,OAAaA,EAAQnG,KAC1D,OAAOkG,QAAQE,IAAI,CAACH,EAAkBF,EAASM,UAEnD,SAACrF,GAAD,OAAWD,QAAQoB,IAAI,uBAAwBnB,KAElD8E,KAAK,SAAAQ,GAA2B,IAAAC,EAAA3F,OAAA4F,EAAA,EAAA5F,CAAA0F,EAAA,GAAzBtG,EAAyBuG,EAAA,GAAdR,EAAcQ,EAAA,GACnBE,EAAOV,EAASpC,IAAI,SAAAiB,GAAI,OAC1BlF,EAAgBkF,EAAKM,KAAKwB,IAAIC,QAM5BC,EAJuB,CACzB,IAAIV,QAAQ,SAACC,GAAD,OAAaA,EAAQnG,KACjC,IAAIkG,QAAQ,SAACC,GAAD,OAAaA,EAAQJ,MAEC3G,OAAOqH,EAAK9C,IAAI,SAACkD,GAAD,OAAShB,MAAMgB,GAAKf,KAAK,SAACgB,GAAD,OAAUA,EAAKT,YAC9F,OAAOH,QAAQE,IAAIQ,KAG1Bd,KAAK,SAAAiB,GAAqC,IAAAC,EAAApG,OAAAqG,EAAA,EAAArG,CAAAmG,GAAnC/G,EAAmCgH,EAAA,GAAxBnH,EAAwBmH,EAAA,GAAAA,EAAAE,MAAA,GAC7BC,QAAQ,SAACC,GACXA,EAAWC,WACQxH,EAAKyH,KAAK,SAAAC,GAAO,OAAIA,EAAQrC,KAAKwB,IAAIC,QAAUS,EAAWI,aACnExC,OAASoC,EAAWC,SAAS,GAAGR,OAGnDjB,EAAS,CACLzF,KAzCO,cA0CPW,QAAS,CACL5B,WAAYA,EACZY,WAAYA,EACZC,YAAaA,EACbC,WAAYA,EACZb,MAAOA,EACPU,KAAMA,QUH4CmC,CAAQ9C,EAAYY,EAAYC,EAAaZ,KAC/GuF,WAAa,SAACxE,EAAWC,GAAZ,OAAqByF,ENzChB,SAAC1F,EAAWC,GAClC,MAAkB,SAAdD,GAPU,QAOcC,EACjB,SAACyF,GACJA,EAAS,CACLzF,KAPiB,oBAQjBW,QAAS,CACLZ,UAAW,OACXC,KAZD,WAiBJ,SAACyF,GACJA,EAAS,CACLzF,KAjBiB,oBAkBjBW,QAAS,CACLZ,UAAW,OACXC,KAvBF,UM+CiCuE,CAAWxE,EAAWC,KACjEsE,YAAc,SAACvE,EAAWC,GAAZ,OAAqByF,ENjBf,SAAC1F,EAAWC,GACpC,MAAkB,UAAdD,GAhCU,QAgCeC,EAClB,SAACyF,GACJA,EAAS,CACLzF,KAhCiB,oBAiCjBW,QAAS,CACLZ,UAAW,QACXC,KArCD,WA0CJ,SAACyF,GACJA,EAAS,CACLzF,KA1CiB,oBA2CjBW,QAAS,CACLZ,UAAW,QACXC,KAhDF,UMgDkCsE,CAAYvE,EAAWC,OAI5DwF,CAA6CF,GC1C5DgC,IAASC,OACLpF,EAAAC,EAAAC,cAACmF,EAAA,EAAD,CAAUzG,MAAOA,GACboB,EAAAC,EAAAC,cAACoF,EAAD,OAEJC,SAASC,eAAe","file":"static/js/main.ee482541.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/pageNotFound.732df2a0.jpg\";","export const PAGE_LOADING = 'PAGE_LOADING';\nexport const PAGE_LOADED = 'PAGE_LOADED';\nexport const PAGE_FAILED = 'PAGE_FAILED';\n\n\nexport const setPage = (pageNumber, leftBorder, rightBorder, query) => {\n    return function (dispatch) {\n        dispatch({\n            type: PAGE_LOADING,\n            payload: null,\n        })\n\n        //request for show data and then to show posters\n        return fetch(createUrl(pageNumber, query), headers())\n            .then(\n                (response) => {\n                    const pageCount = response.headers.get('X-Pagination-Page-Count'); \n                    const pageCountPromise = new Promise((resolve) => resolve(pageCount));\n                    return Promise.all([pageCountPromise, response.json()])\n                },\n                (error) => console.log('ERROR IN REDUX FETCH', error)\n            )\n            .then(([pageCount, response]) => {\n                    const urls = response.map(item => (\n                        createPosterUrl(item.show.ids.tvdb)\n                    ));\n                    const pageCountAndResponse = [\n                        new Promise((resolve) => resolve(pageCount)), \n                        new Promise((resolve) => resolve(response))\n                    ];\n                    const promises = pageCountAndResponse.concat(urls.map((url) => fetch(url).then((resp) => resp.json())))\n                    return Promise.all(promises)\n                }\n            )\n            .then(([pageCount, data, ...responses]) => {\n                responses.forEach((posterData) => {\n                    if (posterData.tvposter) {\n                        const showRecord = data.find(element => element.show.ids.tvdb === +posterData.thetvdb_id);\n                        showRecord.poster = posterData.tvposter[0].url;\n                    }\n                })\n                dispatch({\n                    type: PAGE_LOADED,\n                    payload: {\n                        pageNumber: pageNumber,\n                        leftBorder: leftBorder,\n                        rightBorder: rightBorder,\n                        pageCount: +pageCount,\n                        query: query,\n                        data: data\n                    }\n                })\n            })\n    }\n}\n\nexport const createUrl = (pageNumber, query) => {\n    //generating search request, adding page number or query for search if necessary\n    //to the first if - || query !== undefined\n    if (pageNumber && (query !== '')) {\n        return `https://api.trakt.tv/search/show?extended=full&page=${pageNumber}&limit=15&query=${query}`\n    } else if (query) {\n        return `https://api.trakt.tv/search/show?extended=full&query=${query}`\n    } else if (pageNumber) {\n        return `https://api.trakt.tv/shows/watched?extended=full&page=${pageNumber}&limit=15`\n    } else {\n        return `https://api.trakt.tv/shows/watched?extended=full&page=1&limit=15`\n    }\n}\n\nconst headers = () => {\n    return {\n        method: \"GET\",\n        headers: {\n            \"Content-Type\": \"application/json\",\n            \"trakt-api-key\": \"57e8bf0c5577c8bd768ff34d11b4338b78f56fba6ced125f36bd017d79a968b6\",\n            \"trakt-api-version\": \"2\"\n        }\n    }\n}\n\n//generating URL for show posters request\nconst createPosterUrl = (id) => {\n    const imagesApiKey = 'ddc2447b6b87e0d850a8c2f4136ffe12';\n    const url = `https://webservice.fanart.tv/v3/tv/${id}?api_key=${imagesApiKey}`;\n    return url;\n}","import { PAGE_LOADING, PAGE_LOADED, PAGE_FAILED } from '../../actions/allActions/contentAction';\n\nexport const initialState = {\n    query: '',\n    data: [],\n    pageNumber: 1,\n    leftBorder: 1,\n    rightBorder: 10,\n    pageCount: null,\n    isLoading: true\n};\n\nexport const content = (state = initialState, action) => {\n    switch(action.type) {\n        case PAGE_LOADING: \n            return {\n                ...state,\n                isLoading: true,\n            }\n          \n        case PAGE_LOADED: \n            return {\n                ...state,\n                data: action.payload.data,\n                pageNumber: action.payload.pageNumber,\n                leftBorder: action.payload.leftBorder,\n                rightBorder: action.payload.rightBorder,\n                query: action.payload.query,\n                pageCount: action.payload.pageCount,\n                isLoading: false\n            }\n            \n        case PAGE_FAILED:\n            // TODO: Create error message components. \n            return console.error('SOMETHING WENT WRONG IN PAGINATION');\n\n            \n        default: \n            return state; \n    }\n}\n\n","import { UPDATE_SORT_RULES } from '../../actions/allActions/sortActions';\n\nconst initialState = {\n    fieldName: null,\n    type: null\n}\n\nexport const sort = (state = initialState, action) => {\n    switch(action.type) {\n        case UPDATE_SORT_RULES: \n            return {\n                ...state,\n                ...action.payload,\n            }\n            \n        default: \n            return state; \n    }\n}\n\n","import { combineReducers } from 'redux';\n\nimport { content } from './allReducers/content';\nimport { sort } from './allReducers/sort';\n\nexport const rootReducer = combineReducers({\n    content,\n    sort\n});\n\n// export function rootReducer(state = initialState) {\n//     return state\n// }","const ASC_ORDER = \"ASC\";\nconst DESC_ORDER = \"DESC\";\n\nexport const UPDATE_SORT_RULES = 'UPDATE_SORT_RULES';\n\n//sort shows by year\nexport const sortByYear = (fieldName, type) => {\n    if (fieldName === \"year\" && type === ASC_ORDER) {\n        return (dispatch) => {\n            dispatch({\n                type: UPDATE_SORT_RULES,\n                payload: {\n                    fieldName: 'year',\n                    type: DESC_ORDER\n                },\n            })\n        }\n    } else {\n        return (dispatch) => {\n            dispatch({\n                type: UPDATE_SORT_RULES,\n                payload: {\n                    fieldName: 'year',\n                    type: ASC_ORDER\n                },\n            })\n        }\n    }\n}\n\n //sorting shows by title\n export const sortByTitle = (fieldName, type) => {\n    if (fieldName === 'title' && type === ASC_ORDER) {\n        return (dispatch) => {\n            dispatch({\n                type: UPDATE_SORT_RULES,\n                payload: {\n                    fieldName: 'title',\n                    type: DESC_ORDER\n                },\n            })\n        }\n    } else {\n        return (dispatch) => {\n            dispatch({\n                type: UPDATE_SORT_RULES,\n                payload: {\n                    fieldName: 'title',\n                    type: ASC_ORDER\n                },\n            })\n        }\n    }\n}","import { createStore, applyMiddleware } from 'redux';\nimport { rootReducer } from './reducers/rootReducer';\nimport logger from 'redux-logger';\nimport thunk from 'redux-thunk';\n\nexport const store = createStore(rootReducer, applyMiddleware(thunk, logger));\n\n","import React from 'react';\n\nclass Search extends React.Component {\n    queryRef = React.createRef();\n\n    //setting search using Enter key\n    handleKeyPress = (event) => {\n        if(event.charCode === 13) {\n            this.props.setPage(1, 1, 10, this.queryRef.current.value);\n        } else {\n            console.log('Error in search using keycode');\n        }\n    }\n    //rendering search input\n    render() {\n        return(\n            <div className='search'>\n        <input \n            className='search-input' \n            type='text' \n            defaultValue={this.props.content.query}\n            ref={this.queryRef} \n            placeholder='Search for shows' \n            onKeyPress={this.handleKeyPress}>\n        </input>\n        <button \n            type='submit'\n            className='search-button'\n            onClick={() => this.props.setPage(1, 1, 10, this.queryRef.current.value)}\n        >\n        Go!\n        </button>\n    </div>\n        )\n    }\n}\n\nexport default Search;","/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React from 'react';\n\n//function to define when to renew pagination line\nconst pageRange = (targetPage, leftBorder, rightBorder, pageCount) => {\n    let range = [];\n    let threshold = Math.min(pageCount, leftBorder + 9);\n    if(targetPage === leftBorder && targetPage !== 1) {\n        leftBorder--;\n        rightBorder--;\n        threshold--;\n    } else if(targetPage === rightBorder && targetPage !== pageCount) {\n        leftBorder++;\n        rightBorder++;\n        threshold++;\n    }\n    for (let pageNumber = leftBorder; pageNumber <= threshold; pageNumber++) {\n        range.push(pageNumber);\n    } console.log(targetPage, leftBorder, rightBorder, range);\n\n    return { leftBorder, rightBorder, range };\n}\n\n//moving to the next page\nconst increment = (targetPage, pageCount, setPage, leftBorder, rightBorder, query) => {\n    if(targetPage < pageCount)\n    setPage(targetPage + 1, leftBorder, rightBorder, query);\n  }\n\n//moving to the previous page\n  const decrement = (targetPage, pageCount, setPage, leftBorder, rightBorder, query) => {\n    if(targetPage < pageCount)\n    setPage(targetPage - 1, leftBorder, rightBorder, query);\n  }\n\n//rendering pagination list - page numbers, next and prev page arrows, the first and the last page arrows\nconst Pagination = (props) => {\n    const { leftBorder, rightBorder, range } = pageRange(props.content.pageNumber, props.content.leftBorder, props.content.rightBorder, props.content.pageCount);\n    return (<ul className='pagination'>\n        <li>\n            <a href='#' className='first-page' onClick={() => props.setPage(1, 1, 10, props.content.query)}>&#8810;</a>\n        </li>\n        <li>\n            <a href='#' className='prev' onClick={() => decrement(props.content.pageNumber, props.content.pageCount, props.setPage, leftBorder, rightBorder, props.content.query)}>&#60;</a>\n        </li>\n        {range.map((pageNumber) => (\n            <li key={pageNumber.toString()}>\n                <a href='#'\n                style={pageNumber === props.content.pageNumber ? {backgroundColor: 'rgba(255,255,255,.85)', color: 'rgba(38, 50, 56, 0.8)'} : {}}\n                onClick={() => props.setPage(pageNumber, leftBorder, rightBorder, props.content.query)}>{pageNumber}</a>\n            </li>\n        ))}\n        <li>\n            <a href='#' className='next' onClick={() => increment(props.content.pageNumber, props.content.pageCount, props.setPage, leftBorder, rightBorder, props.content.query)}>&#62;</a>\n        </li>\n        <li>\n            <a href='#' className='last-page' onClick={() => props.setPage(props.content.pageCount, (props.content.pageCount - 10 > 0 ? props.content.pageCount - 10 : 1), props.content.pageCount, props.content.query)}>&#8811;</a>\n        </li>\n    </ul>\n    )}\n\nexport { pageRange, Pagination };","import React from 'react';\n\nimport Search from './Search';\nimport { Pagination } from './Pagination';\n\nconst Header = (props) => (\n    <div className='page-header'>\n        <Search \n            content={props.content}\n            setPage={props.setPage}\n        />\n        <Pagination \n            setPage={props.setPage}\n            content={props.content}\n        />\n    </div>\n)\n\nexport default Header;","import React from 'react';\n\nimport Header from './Header';\n\nimport pageNotFound from '../assets/img/pageNotFound.jpg';\n\nimport '../styles/index.css';\n\n//declaring variables for setting ascending and descending sort order\nexport const ASC_ORDER = \"ASC\";\nexport const DESC_ORDER = \"DESC\";\n\nclass Table extends React.Component {\n    render() {\n        return(\n            <div className='container'>\n                <Header \n                    setPage={this.props.setPage} \n                    searchShow={this.props.searchShow} \n                    content={this.props.content}\n                />\n                <table>\n                    <thead className='table-header'>\n                        <tr className='thead-row'>\n                            <th className='thead-cell'>&#8470;</th>\n                            <th className='thead-cell'>Poster</th>\n                            <th className='thead-cell' \n                            title='To sort A-Z click once. To sort Z-A click twice'\n                            onClick={() => this.props.sortByTitle(this.props.sort.fieldName, this.props.sort.type)}>\n                            Title\n                            </th>\n                            <th className='thead-cell'>Genres</th>\n                            <th className='thead-cell' \n                            title='To sort in ascending order click once. To sort in descending order click twice'\n                            onClick={() => this.props.sortByYear(this.props.sort.fieldName, this.props.sort.type)}>\n                            Year\n                            </th>\n                            <th className='thead-cell'>Country</th>\n                        </tr>\n                    </thead>\n                    <tbody className='table-body'>\n                        {applySortRules(this.props.content.data, this.props.sort.fieldName, this.props.sort.type).map((item, index) => (\n                            <tr className='tbody-row' key={index.toString()}>\n                                <td className='tbody-cell'>{index + 1}</td>\n                                <td className='tbody-cell'>\n                                    <img className='poster' alt='' src={item.poster ? item.poster : pageNotFound} />\n                                 </td>\n                                <td className='tbody-cell'>{item.show.title ? item.show.title : ''}</td>\n                                <td className='tbody-cell'>{item.show.genres ? (item.show.genres).join(', ') : ''}</td>\n                                <td className='tbody-cell'>{item.show.year ? item.show.year : ''}</td>\n                                <td className='tbody-cell'>{item.show.country ? item.show.country.toUpperCase() : ''}</td>\n                            </tr>\n                        ))}\n                    </tbody>\n                </table>\n            </div>\n        )\n    }\n}\n\nexport default Table;\n\n//general function to define when and how to sort by year and by title\nexport const applySortRules = (data, fieldName, type) => {\n    if(!fieldName || !type) {\n        return data\n    }\n    if (fieldName === \"year\") {\n        if (type === ASC_ORDER) {\n           return data.sort(((a, b) => a.show.year - b.show.year))\n        } else if (type === DESC_ORDER) {\n            return data.sort(((a, b) => b.show.year - a.show.year));\n        } else {\n            console.log(\"Error occured in applySortRules with year sorting\")\n        }\n    }\n\n    if (fieldName === \"title\") {\n        if (type === ASC_ORDER) {\n            const compare = (a, b) => {\n                if (a.show.title > b.show.title) {\n                    return 1;\n                }\n                if (a.show.title < b.show.title) {\n                    return -1;\n                }\n                return 0;\n            };\n            return data.sort(compare);\n        } else if (type === DESC_ORDER) {\n            const compareReverse = (a, b) => {\n                if (a.show.title > b.show.title) {\n                    return -1;\n                }\n                if (a.show.title < b.show.title) {\n                    return 1;\n                }\n                return 0;\n            };\n            return data.sort(compareReverse);\n        } else {\n            console.log(\"Error occured in applySortRules with title sorting\")\n        }\n    }\n}\n","import React from 'react';\nimport { connect } from 'react-redux';\n\nimport Table from './Table';\n// import ErrorMessage from './ErrorMessage';\nimport { setPage } from '../store/actions/allActions/contentAction';\nimport { sortByYear, sortByTitle } from '../store/actions/allActions/sortActions';\n\nimport '../styles/index.css';\n\n\nclass App extends React.Component {\n    //data request\n    componentDidMount() {\n        this.props.setPage(1, 1, 10, '');\n    }\n\n    //page rendering\n    render() {\n        const { isLoading } = this.props.content;\n\n        //showing spinner loader while data loading\n        if (isLoading) return <div className='lds-ripple'><div></div><div></div></div>;\n\n        return (\n            <Table\n                setPage={this.props.setPage}\n                sortByYear={this.props.sortByYear}\n                sortByTitle={this.props.sortByTitle}\n                sort={this.props.sort}\n                content={this.props.content}\n            /> \n        )\n    }\n}\n\n//connecting data from redux store\nconst mapStateToProps = (store) => {\n    return {\n        content: store.content,\n        sort: store.sort\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        setPage: (pageNumber, leftBorder, rightBorder, query) => dispatch(setPage(pageNumber, leftBorder, rightBorder, query)),\n        sortByYear: ((fieldName, type) => dispatch(sortByYear(fieldName, type))),\n        sortByTitle: ((fieldName, type) => dispatch(sortByTitle(fieldName, type)))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { store } from './store/configureStore';\n\nimport App from './components/App';\n\nimport './styles/index.css';\n\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>,\n    document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\n"],"sourceRoot":""}